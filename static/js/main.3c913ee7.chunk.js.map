{"version":3,"sources":["components/counter.js","App.js","index.js"],"names":["Counter","state","addOne","add100","increase","result","type","onClick","App","setState","currentState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGO,SAASA,EAAT,GAKH,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,OACAC,EACC,EADDA,SAEQC,EAAWJ,EAAXI,OAER,OACE,oCACE,4BACG,UACAA,GAEH,4BACEC,KAAK,SACLC,QAASL,GAFX,UAMA,4BACEI,KAAK,SACLC,QAASJ,GAFX,UAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,U,UCkBSI,E,4MAzCbP,MAAQ,CACNI,OAAQ,G,EAGVH,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAY,MACxB,CACEL,OAAQK,EAAaL,OAAS,O,EAKpCF,OAAS,WACP,EAAKM,UAAS,SAAAC,GAAY,MACxB,CACEL,OAAQK,EAAaL,OAAS,S,EAKpCD,SAAW,WACL,EAAKH,MAAMI,OAAS,IAAM,GAC5B,EAAKF,SACL,EAAKD,UAEL,EAAKA,U,uDAKP,OACE,kBAACF,EAAD,CACEC,MAAOU,KAAKV,MACZC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GApCLQ,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3c913ee7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Counter({\n  state,\n  addOne,\n  add100,\n  increase,\n}) {\n  const { result } = state;\n\n  return (\n    <>\n      <h1>\n        {'Count: '}\n        {result}\n      </h1>\n      <button\n        type=\"button\"\n        onClick={addOne}\n      >\n        addOne\n      </button>\n      <button\n        type=\"button\"\n        onClick={add100}\n      >\n        add100\n      </button>\n      <button\n        type=\"button\"\n        onClick={increase}\n      >\n        Magic\n      </button>\n    </>\n  );\n}\n\nCounter.propTypes = {\n  state: PropTypes.shape({\n    result: PropTypes.number.isRequired,\n  }.isRequired).isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { Counter } from './components/counter';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    result: 0,\n  };\n\n  addOne = () => {\n    this.setState(currentState => (\n      {\n        result: currentState.result + 1,\n      }\n    ));\n  }\n\n  add100 = () => {\n    this.setState(currentState => (\n      {\n        result: currentState.result + 100,\n      }\n    ));\n  }\n\n  increase = () => {\n    if (this.state.result % 5 === 0) {\n      this.add100();\n      this.addOne();\n    } else {\n      this.addOne();\n    }\n  };\n\n  render() {\n    return (\n      <Counter\n        state={this.state}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}